include parts/selector

extends ../layout

append javascripts
    script.

        var guestListContainer = #{ data.guests[0] && data.guests[0].length ? data.guests : '[]' }
        var petListContainer = #{ data.pets[0] && data.pets[0].length ? data.pets : '[]' }

        function customValidators($form, fields, guests, pets, formErrors) {
            if (typeof formErrors == 'undefined') {
                formErrors = []
            }
            if (fields['guests'].length > 5) {
                formErrors.push('No more than 5 guests')
            }
            if (fields['pets'].length > 2) {
                formErrors.push('No more than 2 pets')
            }
            console.log(formErrors)
            if (formErrors.length > 0) {
                $form.form('add errors', formErrors)
            }
            return (formErrors.length > 0)
        }

        $(function(){
            var $form =  $('form[name=mainForm]')
            $('.tabular.menu .item').tab()

            var validationRules = {
                emergencyContact_fullName : {rules:[{type:'empty'}, {type:'maxLength[70]'}]},
                emergencyContact_phone : {rules:[{type:'empty'}, {type:'maxLength[15]'}]},
                emergencyContact_email : {rules:[{type:'maxLength[254]'}, {type:'email'}]}
            }

            // CREATE / SAVE
            $form.form({
                debug: false,
                fields: validationRules,
                onFailure: function(formErrors, fields) {

                    console.log(formErrors)
                    fields['guests'] = guestListContainer
                    fields['pets'] = petListContainer
                    customValidators($form, fields, formErrors)
                    return false
                },
                onSuccess: function(event, fields) {
                    fields['guests'] = guestListContainer
                    fields['pets'] = petListContainer
                    if (customValidators($form, fields)) { // has errors
                        return false
                    }
                    console.log('Attemping to save into #{formAction} via #{formMethod}' )
                    $.ajax({
                        type: '#{formMethod}',
                        url: '#{apiItem}',
                        data: fields,
                        dataType: 'JSON',
                        headers: {
                            "x-access-token":"#{authToken}"
                        },
                        statusCode: {
                            201: function(data, textStatus, jqXHR) {
                                $.get('/message/success/Saved successfully')
                            }
                        }
                    })
                    .error(function(response) {
                        console.error('AJAX ERROR')
                        console.error(JSON.parse(response.responseText).message)
                        // console.error(JSON.parse(response.responseText.errors))
                        var formErrors = []
                        var p = JSON.parse(response.responseText).errors
                        for (var key in p) {
                            if (p.hasOwnProperty(key)) {
                                formErrors.push(p[key].message)
                            }
                        }
                        if (formErrors.length > 0) {
                            $form.form('add errors', formErrors)
                        }
                        toaster('error', JSON.parse(response.responseText).message)
                        return false
                    })
                    .done(function(response) {
                        console.log('SUCCESS')
                        console.log(response)
                        location.replace('#{formComplete}')
                    })
                    return false
                }
            })
        })

    -var guestFormRules = "{firstName: {rules:[{type:'empty'}, {type:'maxLength[35]'}]},lastName: {rules:[{type:'empty'}, {type:'maxLength[35]'}]}}"
    -var guestRowItem = "fields.firstName + ' ' + fields.lastName"
    +selectorJs('guests', 5, guestFormRules, guestRowItem, 'guestListContainer')

    -var petFormRules = "{name:{rules:[{type:'empty'}, {type:'maxLength[35]'}]},weight: {rules:[{type:'empty'}, {type:'maxLength[3]'}]}}"
    -var petRowItem = "fields.name + ' - ' + fields.weight + ' lb'"
    +selectorJs('pets', 2, petFormRules, petRowItem, 'petListContainer')

append frontContent
    .ui.text.container
        h1.ui.header Signup for #{data._event.name}
        .ui.hidden.divider
        .ui.hidden.divider
        form.ui.form(name='mainForm')

            input(type='hidden', name='_event', value=data._event.id)
            input(type='hidden', name='_contact', value=data._contact.id)

            .ui.relaxed.stackable.grid

                .eight.wide.column

                    +selectorListPanel('guests', data.guests, 'Guest', 'blue user', 'blue')

                    +selectorListPanel('pets', data.pets, 'Pet', 'brown paw', 'brown')

                .eight.wide.column

                    h5.ui.heading Emergency Contact
                    .ui.basic.red.segment

                        .field.required
                            label(for='emergencyContact_fullName') Full Name
                            input(type='text', id='emergencyContact_fullName', name='emergencyContact[fullName]',
                                value=data._contact.emergencyContact?data._contact.emergencyContact.fullName:'')

                        .field.required
                            label(for='emergencyContact_phone') Phone Number
                            input(type='text', id='emergencyContact_phone', name='emergencyContact[phone]',
                                value=data._contact.emergencyContact?data._contact.emergencyContact.phone:'')

                        .field.required
                            label(for='emergencyContact_email') Email Address
                            input(type='text', id='emergencyContact_email', name='emergencyContact[email]',
                                value=data._contact.emergencyContact?data._contact.emergencyContact.email:'')

            // include parts/eventSelector

            .ui.container
                .ui.grid
                    .sixteen.wide.right.aligned.column
                        .ui.big.primary.submit.button
                            | Reserve Your Spot!

            .ui.hidden.clearing.divider
            .ui.error.message
            .ui.hidden.clearing.divider

append footer
    p &nbsp;
    p &nbsp;
    +selectorModal('guests', 'Guest', 'user blue', 'blue')
        .two.fields.required
            .field
                label(for='firstName') First Name
                input(type='text', name='firstName', id='firstName', maxlength='3')
            .field
                label(for='lastName') Last Name
                input(type='text', name='lastName', id='lastName', maxlength='3')
        .two.fields
            .field.required
                label(for='phone') Phone
                .ui.left.icon.input
                    input(type='text', name='phone', id='phone', maxlength='15')
                    i.phone.icon
            .field
                label(for='email') Email
                .ui.left.icon.input
                    input(type='text', name='email', id='email', maxlength='255')
                    i.mail.icon

    +selectorModal('pets', 'Pet', 'paw brown', 'brown')
        .two.fields
            .field
                label(for='kind') Kind
                    select.ui.dropdown(type='text', name='kind', id='kind')
                        option Dog
                        option Cat
                        option Other

            .field
                label(for='name') Pets Name
                input(type='text', name='name', id='name', maxlength='35')

            .field
                label(for='weight') Pets Weight
                .ui.right.labeled.input
                    input(type='number', name='weight', id='weight', maxlength='3')
                    .ui.basic.label
                        | lb
