extend ../layout

include ../../mixins/formFields
include ../../mixins/addressSelector
include ../../mixins/personSelector

append javascripts
    script(src="/javascripts/searchAPIs.js")
    script(src='/javascripts/jquery-maxlength.js')
    // +addressSelectorInit
    +personSelectorInit
    script.
        $(function(){
            $('input[data-maxsize], textarea[data-maxsize]').maxLengthCounter()

            $('.ui.checkbox').checkbox()
            $('#editPerson')
                .form({
                    fields: {
                    nickName: {rules:[{type:'empty'}, {type:'maxLength[70]'}]},
                    firstName: {rules:[{type:'empty'}, {type:'maxLength[35]'}]},
                    lastName: {rules:[{type:'empty'}, {type:'maxLength[35]'},{type:'doesntContain[a-zA-Z]'}]},
                    email: {rules:[{type:'empty'}, {type:'maxLength[254]'},{type:'email'}]},
                    childAge: {
                        optional: true,
                        rules:[{
                            type: 'integer[0..17]',
                            prompt: 'Child must be under 18'
                        }, {
                            type: 'maxLength[2]'
                        }]},
                    phone: {
                        identifier: 'phone',
                        rules: [{
                            type: 'regExp[/^[+]*[(]{0,1}[0-9]{1,3}[)]{0,1}[-\s\.\/0-9]*$/g]',
                            prompt: 'Please enter a valid phone number'
                        },{
                            type:'minLength[10]'
                        }]
                    }
                },
                inline: false
            })
            $('.ui.delete.button').click(function(){
                $.ajax({
                    url: '/api/person/#{data.id}',
                    type: 'DELETE'
                })
            })

            var childAge = $("#childAge")
            var hasAge = childAge.val().length;
            childAge.prop('disabled', !hasAge)
            $("#isChild").change(function(){
                if ($(this).prop('checked')){
                childAge.prop('disabled', false)
                } else {
                childAge.val('')
                childAge.prop('disabled', true)
                }
            })
        })

append appContent

    - var method
    if (formMethod != 'post' && formMethod != 'get')
        - method = 'post'
    else
        - method = formMethod

    h1 Person

    form#editPerson.ui.form(method=method, action=formAction, name='form')

        .ui.raised.segment

            div(style='display: none;')
                input#PreventChromeAutocomplete(type='text', name='PreventChromeAutocomplete', autocomplete='address-level4')

            - if (formMethod != 'post' && formMethod != 'get')
                input(type='hidden', name='_method', value=formMethod)

            +textField('nickName', 'Nickname', data.nickName)

            .two.fields
                +textField('firstName', 'First Name', data.firstName)
                +textField('lastName', 'Last Name', data.lastName)

            .two.fields
                +emailField('email', 'Email', data.email)
                +phoneField('phone', 'Phone', data.phone)

            .field
                label(for='isChild') Is Child
                .ui.left.labeled.input
                    .ui.label
                        .ui.fitted.checkbox
                            input(type='checkbox', name='isChild', id='isChild', checked=data.isChild)
                    input(type='number', name='childAge', id='childAge', max='17', maxlength='2', placeholder='Childs age...', value=data.childAge)

        .ui.raised.segment

            .field
                label(for='_address') Address
                +addressSelector('_address', data._address?data._address.shortAddress:'', data._address?data._address.id:'')

        .ui.raised.segment

            .field
                label(for='_emergencyContact') Emergency Contact
                +personSelector('_emergencyContact', data._emergencyContact?data._emergencyContact.fullName:'', data._emergencyContact?data._emergencyContact.id:'')

        .ui.raised.segment

            +field('gearList', 'Hammock Setup', data.gearList)
                textarea(name='gearList', id='gearList', placeholder='Limit is 2000 characters.', data-maxsize='2000', data-output='gearListCount', wrap='virtual')
                    = data.gearList
                .label ( #[i#gearListCount] / 2000)

        .ui.row
            .ui.primary.submit.button.right.floated
                case formMode
                    when 'edit': | Update
                    default: | Save

            a.ui.button.right.floated(href=list)
                | Cancel

            if formMode == 'edit'
                .ui.delete.icon.button.left.floated(title='Delete')
                    i.trash.outline.icon

            .ui.error.message
