include ../../mixins/addressSelector
include ../../mixins/personSelector
include ../../mixins/formFields
include ../includes/formToolbar
include ../includes/formElements

extend ../layout

block toolbar
    +formToolbar

append javascripts
    script.
        $(function(){
            // Validation Rules
            var validationRules = {
                nickName: {rules:[{type:'empty'}, {type:'maxLength[70]'}]},
                firstName: {rules:[{type:'empty'}, {type:'maxLength[35]'}]},
                lastName: {rules:[{type:'empty'}, {type:'maxLength[35]'},{type:'doesntContain[a-zA-Z]'}]},
                email: {rules:[{type:'empty'}, {type:'maxLength[254]'},{type:'email'}]},
                childAge: {
                    optional: $('isChild').val(),
                    rules:[{
                        type: 'integer[0..17]',
                        prompt: 'Child must be under 18'
                    }, {
                        type: 'maxLength[2]'
                    }]},
                phone: {
                    identifier: 'phone',
                    rules: [{
                        type: 'regExp[/^[+]*[(]{0,1}[0-9]{1,3}[)]{0,1}[-\s\.\/0-9]*$/g]',
                        prompt: 'Please enter a valid phone number'
                    },{
                        type:'minLength[10]'
                    }]
                }
            }

            var $form =  $('form[name=mainForm]')

            // CREATE / SAVE
            $form.form({
                fields: validationRules,
                inline : false,
                onSuccess: function(event, fields){
                    $.ajax({
                        type: '#{formMethod}',
                        data: fields,
                        url: '#{apiItem}',
                        dataType: 'JSON',
                        statusCode: {
                            201: function(data, textStatus, jqXHR) {
                                console.log('201 Error')
                                $.get('/message/success/Saved successfully')
                            }
                        }
                    })
                    .error(function(response) {
                        toaster('error', 'Error: ' + JSON.parse(response.responseText).error)
                    })
                    .done(function(response) {
                        location.replace('#{editAction}' + response.data.id)
                    })
                    return false
                }
            })

            $('.ui.delete.modal').modal({
                onApprove: function(){
                    $.ajax({
                        type: 'delete',
                        data:  $form.form('get values'),
                        url: '#{apiItem}#{data.id}',
                        dataType: 'JSON',
                        statusCode: {
                            204: function() {
                                $.get('/message/success/Deleted successfully')
                            },
                            501: function() {
                                $.get('/message/error/Error deleting')
                            }
                        }
                    })
                    .done(function(response) {
                        location.replace('#{listAction}')
                    })
                }
            })
            $form.find('.delete.button').click(function(){
                $('.ui.delete.modal').modal('show')
            })

            // Is a child fields.
            var childAge = $form.find("#childAge")
            var hasAge = childAge.val().length;
            childAge.prop('disabled', !hasAge)
            $form.find("#isChild").change(function(){
                if ($(this).prop('checked')){
                childAge.prop('disabled', false)
                } else {
                childAge.val('')
                childAge.prop('disabled', true)
                }
            })

            $form.find('input[data-maxsize], textarea[data-maxsize]').maxLengthCounter()
            $form.find('.ui.checkbox').checkbox()
            $form.find('.personSelector').search(localPersonSearch)
            $form.find('.addressSelector').search(localAddressSearch)
        })

append appContent

    form.ui.form(name='mainForm')

        +mainFormWrapper

            +formSegment

                .field.required
                    label(for='nickName') Nickname
                    input(type="text", name='nickName', id='nickName', value=data.nickName)

                .two.fields

                    .field.required
                        label(for='firstName') First Name
                        input(type="text", name='firstName', id='firstName', value=data.firstName)

                    .field.required
                        label(for='lastName') Last Name
                        input(type="text", name='lastName', id='lastName', value=data.lastName)

                .two.fields

                    .field.required
                        label(for='email') Email
                        input(type="email", name='email', id='email', value=data.email)

                    .field.required
                        label(for='phone') Phone
                        input(type="text", name='phone', id='phone', value=data.phone)

                .field
                    label(for='isChild') Is Child
                    .ui.left.labeled.input
                        .ui.label
                            .ui.fitted.checkbox
                                input(type='checkbox', name='isChild', id='isChild', checked=data.isChild)
                        input(type='number', name='childAge', id='childAge', max='17', maxlength='2', placeholder='Childs age...', value=data.childAge)

                .field
                    label(for='_address') Address
                    +addressSelector('_address', data._address?data._address.shortAddress:'', data._address?data._address.id:'')


                .field
                    label(for='_emergencyContact') Emergency Contact
                    +personSelector('_emergencyContact', data._emergencyContact?data._emergencyContact.fullName:'', data._emergencyContact?data._emergencyContact.id:'')

            +formSegment

                +field('gearList', 'Hammock Setup', data.gearList)
                    textarea(name='gearList', id='gearList', rows="2", placeholder='Limit is 2000 characters.', data-maxsize='2000', data-output='gearListCount', wrap='virtual')
                        = data.gearList
                    .label ( #[i#gearListCount] / 2000)

            +formSegment

                h4 Pet

                .ui.three.fields

                    .field
                        label(for='petName') Pet's Name
                        input(type="text", name='_pet.petName', id='petName', value=data._pet?data._pet.petName:'')

                    .field
                        label(for='petWeight') Pet's Weight (LBS)
                        input(type="number", name='_pet.petWeight', id='petWeight', value=data._pet?data._pet.petWeight:'')

                    .field
                        label(for='petType') Pet's Type
                        input(type="text", name='_pet.petType', id='petType', value=data._pet?data._pet.petType:'')

            +formSegment

                h4 Vendor

                .field
                    label(for='companyName') Company Name
                    input(type="text", name='_vendor.companyName', id='companyName', value=data._vendor?data._vendor.companyName:'')

                .field
                    label(for='companyDetails') Company Details
                    textarea(name='_vendor.companyDetails', id='companyDetails', rows="2", placeholder='Limit is 2000 characters.', data-maxsize='2000', data-output='companyDetailsCount', wrap='virtual')
                        = data._vendor?data._vendor.companyDetails:''
                    .label ( #[i#companyDetailsCount] / 2000)

                .field
                    label(for='companyWebsite') Company Website
                    .ui.labeled.input
                        .ui.label http://
                        input(type="text", name='_vendor.companyWebsite', id='companyWebsite', value=data._vendor?data._vendor.companyWebsite:'')

            div(style='display: none;')
                input#PreventChromeAutocomplete(type='text', name='PreventChromeAutocomplete', autocomplete='address-level4')
                input(type="hidden", name="id", value=data.id)

        +messageContainer