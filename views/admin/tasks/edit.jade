include ../../mixins/formFields
include ../../mixins/personSelector
include ../includes/formToolbar
include ../includes/formElements

extend ../layout

block toolbar
    +formToolbar

append javascripts
    script.
        $(function(){
            var validationRules = {
                name: {rules:[{type:'empty'}, {type:'maxLength[70]'}]},
                description: {rules:[{type:'empty'}, {type:'maxLength[500]'}]},
                location: {rules:[{type:'empty'}, {type:'maxLength[250]'}]},
                startTime: {rules:[{type:'empty'}, {type:'maxLength[7]'}]},
                endTime: {rules:[{type:'empty'}, {type:'maxLength[7]'}]},
                personsRequired: {rules:[{type:'empty'}, {type:'number'}]},
                effort: {rules:[{type:'empty'}, {type:'number'}]}, // 1-5
                _contact: {rules:[{type:'empty'}]}
            }

            var $form =  $('form[name=mainForm]')

            // CREATE / SAVE
            $form.form({
                fields: validationRules,
                inline : false,
                onSuccess: function(event, fields){
                    $.ajax({
                        type: '#{formMethod}',
                        data: fields,
                        url: '#{apiItem}',
                        dataType: 'JSON',
                        statusCode: {
                            201: function(data, textStatus, jqXHR) {
                                console.log('201 Error')
                                $.get('/message/success/Saved successfully')
                            }
                        }
                    })
                    .error(function(response) {
                        toaster('error', 'Error: ' + JSON.parse(response.responseText).error)
                    })
                    .done(function(response) {
                        location.replace('#{editAction}' + response.data.id)
                    })
                    return false
                }
            })

            $('.ui.delete.modal').modal({
                onApprove: function(){
                    $.ajax({
                        type: 'delete',
                        data:  $form.form('get values'),
                        url: '#{apiItem}#{data.id}',
                        dataType: 'JSON',
                        statusCode: {
                            204: function() {
                                $.get('/message/success/Deleted successfully')
                            },
                            501: function() {
                                $.get('/message/error/Error deleting')
                            }
                        }
                    })
                    .done(function(response) {
                        location.replace('#{listAction}')
                    })
                }
            })
            $form.find('.delete.button').click(function(){
                $('.ui.delete.modal').modal('show')
            })

            // Timepicker
            $form.find('#startTime').timepicker({
                minTime: '5:00am',
                maxTime: '12:00am',
                match: 'text',
                useSelect: true,
                noneOption: ' ',
                className: 'ui selection dropdown'
            })
            var endTimeField = $form.find('#endTimeField')
            endTimeField.find('#endTime').timepicker({
                minTime: '5:00am',
                maxTime: '12:00am',
                match: 'text',
                useSelect: true,
                noneOption: ' ',
                className: 'ui selection dropdown',
                showDuration: true
            })
            $('#startTime').on('changeTime', function() {
                // Get selected time
                var out = moment($(this).timepicker('getTime')).add(1, 'h').format('h:mma')
                // Set hidden field
                endTimeField.find('#endTime').val(out)

                endTimeField.find('#endTime').timepicker('setTime', out)

                endTimeField.find('#endTime').timepicker('option', { minTime: $(this).timepicker('getTime') })

                endTimeField.find('.ui-timepicker-select').dropdown()
            })
            $form.find('.ui-timepicker-select').dropdown()
            $form.find('.ui.dropdown').dropdown()
            $form.find('input[data-maxsize], textarea[data-maxsize]').maxLengthCounter()
            $form.find('.ui.checkbox').checkbox()
            $form.find('.personSelector').search(localPersonSearch)
        })

append appContent

    form.ui.form(name='mainForm')

        +mainFormWrapper

            +formSegment

                +formSegmentHeader("Task Details")

                +formSegmentIntro

                .fields

                    .field.twelve.wide.required
                        label(for='name') Task Name
                        input(type='text', name='name', id='name', value=data.name)

                .field.required.textarea
                    label(for='description') Task Description
                    +textarea('description', 'description', '2000')
                        = data.description

            +formSegment

                +formSegmentHeader("Task Schedule")

                +formSegmentIntro

                .two.fields

                    .field.required
                        label(for="startTime") Start Time
                        input(type="text", name="startTime", id="startTime", value=data.startTime)

                    .field.required#endTimeField
                        label(for="endTime") End Time
                        input(type="text", name="endTime", id="endTime", value=data.endTime)

                .fields

                    .field.ten.wide.required
                        label(for='location') Location (Being served at)
                        input(type='text', name='location', id='location', value=data.location)

            +formSegment

                +formSegmentHeader("Work Effort")

                +formSegmentIntro

                    .fields

                        .field.ten.wide.required
                            label(for='_contact') Main Contact
                            +personSelector('_contact', '_contact', data._contact?data._contact.id:'', data._contact?data._contact.fullName:'')

                    .fields

                        .field.three.wide.required
                            label(for='effort') Effort
                            select.ui.dropdown(name='effort', id='effort')
                                option
                                each val in [1,2,3,4,5]
                                    if data.effort == val
                                        option(selected)= val
                                    else
                                        option= val

                    .fields

                        .field.two.wide.required
                            label(for='personsRequired') Persons Required
                            input(type='number', name='personsRequired', id='personsRequired', value=data.personsRequired)

                .field.required
                    label() Volunteers
                    ol
                        li John Smith
                        li John Rambo
                        li Brad Thomas

            div(style='display: none;')
                input#PreventChromeAutocomplete(type='text', name='PreventChromeAutocomplete', autocomplete='address-level4')
                input(type="hidden", name="id", value=data.id)

        +messageContainer