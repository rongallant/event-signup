include ../../mixins/formFields
include ../../mixins/personSelector
include ../includes/formToolbar

extend ../layout

append javascripts
    script.
        $(function(){
            var validationRules = {
                name: 'empty',
                address1: 'empty',
                city: 'empty',
                state: 'empty',
                country: 'empty'
            }

            var $form =  $('form[name=mainForm]')

            // CREATE / SAVE
            $form.form({
                fields: validationRules,
                inline : false,
                onSuccess: function(event, fields){
                    $.ajax({
                        type: '#{formMethod}',
                        data: fields,
                        url: '#{apiItem}',
                        dataType: 'JSON',
                        statusCode: {
                            201: function() {
                                console.log('201 Error')
                                $.get('/message/success/Saved successfully')
                            },
                            501: function() {
                                console.log('501 Error')
                                $.get('/message/error/Error saving')
                            }
                        }
                    })
                    .done(function(response) {
                        location.replace('#{editAction}' + response.data.id)
                    })
                    return false
                }
            })

            $('.ui.delete.modal').modal({
                onApprove: function(){
                    $.ajax({
                        type: 'delete',
                        data:  $form.form('get values'),
                        url: '#{apiItem}#{data.id}',
                        dataType: 'JSON',
                        statusCode: {
                            204: function() {
                                $.get('/message/success/Deleted successfully')
                            },
                            501: function() {
                                $.get('/message/error/Error deleting')
                            }
                        }
                    })
                    .done(function(response) {
                        location.replace('#{listAction}')
                    })
                }
            })
            $form.find('.delete.button').click(function(){
                $('.ui.delete.modal').modal('show')
            })
            $form.find('input[data-maxsize], textarea[data-maxsize]').maxLengthCounter()
            $form.find('.ui.checkbox').checkbox()
            $form.find('select.dropdown, .selection.dropdown').dropdown()
            $form.find('.personSelector').search(localPersonSearch)
            $form.find('#addressSearch').search(googleAddressSearchAndPopulate)
            if (('#{data.id}').length > 0) {
                updateMap('#{encodeURIComponent(data.fullAddress)}')
            }
        })

append appContent

    .ui.stackable.grid
        .sixteen.wide.tablet.ten.wide.computer.column

            form.ui.form(name='mainForm')

                +formToolbar

                div(style='display: none;')
                    input#PreventChromeAutocomplete(type='text', name='PreventChromeAutocomplete', autocomplete='address-level4')

                input(type="hidden", name="id", value=data.id)

                input.prompt(type='hidden', id='location', name='location')

                .ui.raised.segment

                    .field.required
                        label(for='name') Address Name
                        input(type='text', name='name', id=name, value=data.name)

                    .field
                        label(for='description') Address Description
                        textarea(name='description', id='description', rows="2", placeholder='Limit is 2000 characters.', data-maxsize='2000', data-output='descriptionCount', wrap='virtual')
                            = data.description
                        .label ( #[i#descriptionCount] / 2000)

                    .field.required
                        label(for='_contact') Main Contact
                        +personSelector('_contact', data._contact?data._contact.fullName:'', data._contact?data._contact.id:'')

                .ui.raised.segment

                    .two.fields

                        .field
                            label(for='address1') Address 1 (Search)
                            #addressSearch.ui.search
                                .ui.icon.input
                                    input.prompt(type='text', id='address1', name='address1', autocomplete='off', value=data.address1, placeholder='Search for address...')
                                    i.marker.icon

                        .field
                            label(for='address2') Address 2
                            input(type='text', name='address2', id='address2', value=data.address2)

                    .three.fields

                        .field.required
                            label(for='city') City
                            input(type='text', name='city', id='city', value=data.city, required)

                        .field.required
                            label(for='state') State
                            input(type='text', name='state', id='state', value=data.state, required)

                        .field.required
                            label(for='postalCode') Zip Code
                            input(type='text', name='postalCode', id='postalCode', value=data.postalCode, required)

                    .field.required
                        label(for='country') Country
                        +countryField('country', data.country, data.country)

                .ui.hidden.clearing.divider

                .ui.error.message

        if data.fullAddress
            .sixteen.wide.tablet.six.wide.computer.column
                .ui.segment
                    #gMap.ui.embed
                    .ui.hidden.divider
                    .nicePre= data.fullAddress
