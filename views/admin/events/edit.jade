extend ../layout

include ../../mixins/addressSelector
include ../../mixins/personSelector
include ../../mixins/scheduleDatesSelector
include ../scheduleDates/parts/form

append stylesheets
    link(rel="stylesheet", type="text/css", href="/javascripts/daterangepicker.css")

append javascripts

    script(src="/javascripts/moment.js")
    script(src="/javascripts/daterangepicker.min.js")
    script(src="/jquery_timepicker/jquery.timepicker.min.js")
    script(src="/javascripts/scheduleDayForm.js")
    script(src="/javascripts/searchAPIs.js")
    +personSelectorInit
    +scheduleDatesSelectorInit
    script.
        $(function(){
            $('#editEvent')
                .form({
                    fields: {
                    name: 'empty',
                    description: 'empty',
                    mainPerson: 'empty',
                    schedules: 'empty',
                    location: 'empty'
                }
            })
            $('.ui.delete.button').click(function(){
                deleteEntry('#{data.id}')
                $.ajax({
                    url: '/api/event/#{data.id}',
                    type: 'DELETE',
                    success: function(result) {
                        window.location.replace('/admin/events/')
                    }
                })
            })
            $('#addSchedules').click(function(){
                $('#schedulesForm')
                    .modal('show')
            })
            $('.addressSelector').search(localAddressSearch)
            scheduleEventFormScripts('#{data.id}', '#{data.id}')
        })

append appContent

    - var method
    if (formMethod != 'post' && formMethod != 'get')
        - method = 'post'
    else
        - method = formMethod

    .ui.raised.segment

        h1 Event

        form#editEvent.ui.form(method=formMethod action=formAction)

            div(style='display: none;')
                input#PreventChromeAutocomplete(type='text', name='PreventChromeAutocomplete', autocomplete='address-level4')

            if (formMethod != 'post' && formMethod != 'get')
                input(type='hidden', name='_method', value=formMethod)

            .field.required
                label(for="name") Event Name
                input(type="text", name="name", id="name", value=data.name)

            .field.required
                label(for="description") Description
                textarea(type="text", name="description", id="description", rows="4")= data.description

            .field.required
                label(for='mainPerson') Main Contact
                +personSelector('mainPerson', data._mainPerson?data._mainPerson.id:'', data._mainPerson?data._mainPerson.fullName:'')

            .field.required
                label(for="schedules") Schedules
                #schedules.ui.segments
                    .ui.segment
                        a.ui.basic.button#addSchedules(href='#')
                            i.icon.plus
                            | Schedules

            .field.required
                label(for="location") Location
                +addressSelector("location", data._address, data.id)

            .ui.hidden.divider

            .ui.row
                .ui.primary.submit.button
                    case formMode
                        when 'edit': | Update
                        default: | Save

                a.ui.button(href=list)
                    | Cancel

                if formMode == 'edit'
                    .ui.delete.icon.button.right.floated(title='Delete')
                        i.trash.outline.icon

                .ui.error.message



append footer
    //- Modal
    #schedulesForm.ui.modal
        .header Schedule Date
        .content
            +scheduleDayForm('Schedule Date', user, dateFormat, data, 'edit', 'post', apiAction)
        .actions
            .ui.cancel.button
                | Cancel
            if formMode == 'edit'
                .ui.delete.icon.button.right.floated(title='Delete')
                    i.trash.outline.icon
            .ui.primary.submit.button
                case formMode
                    when 'edit': | Update
                    default: | Save